definitions:
  models.AccusStatusDto:
    properties:
      id:
        example: 9cade01e-4c66-4c57-910a-2efe5f7e3dff
        type: string
      status:
        example: 1
        type: integer
    type: object
  models.Accusation:
    properties:
      company_id:
        example: "17280000089799"
        type: string
      id:
        description: 文章uuid
        example: a05cde18-488b-4dc4-afa1-df9e0ccf16a1
        type: string
      pic:
        description: 帖子图片路径
        example: 图片内容
        type: string
      post:
        description: 帖子内容
        example: 文字内容
        type: string
      status:
        description: 举报状态
        example: 2
        type: integer
      time:
        description: 时间
        example: "2022-01-28T23:57:30+08:00"
        type: string
      userId:
        description: 用户名
        example: "123123"
        type: string
    type: object
  models.AccusationList:
    properties:
      code:
        example: "200"
        type: string
      data:
        items:
          $ref: '#/definitions/models.Accusation'
        type: array
      msg:
        example: success
        type: string
    type: object
  models.AplStatusDto:
    properties:
      id:
        example: 967d7ae4-1c39-40f8-befd-222d768d70f7
        type: string
      status:
        example: 1
        type: integer
    type: object
  models.Appeal:
    properties:
      company_id:
        example: "17280000089799"
        type: string
      id:
        description: 文章uuid
        example: 967d7ae4-1c39-40f8-befd-222d768d70f7
        type: string
      pic:
        description: 帖子图片路径
        example: 图片内容
        type: string
      post:
        description: 帖子内容
        example: 文字内容
        type: string
      status:
        description: 举报状态
        example: 2
        type: integer
      time:
        description: 时间
        example: "2022-01-28T23:45:54+08:00"
        type: string
    type: object
  models.AppealList:
    properties:
      code:
        example: "200"
        type: string
      data:
        items:
          $ref: '#/definitions/models.Appeal'
        type: array
      msg:
        example: success
        type: string
    type: object
  models.ChangeThresholdReq:
    properties:
      features:
        type: string
      threshold:
        type: number
    type: object
  models.Company:
    properties:
      id:
        example: "172800010800110000"
        type: string
      status:
        example: 2
        type: integer
    type: object
  models.CompanyAppealDto:
    properties:
      id:
        example: "17280000089799"
        type: string
      pic:
        example: 图片内容
        type: string
      post:
        example: 文字申诉内容
        type: string
    type: object
  models.CpnListResponse:
    properties:
      code:
        example: "200"
        type: string
      data:
        items:
          $ref: '#/definitions/models.Company'
        type: array
      msg:
        example: success
        type: string
    type: object
  models.DisplayRequest:
    properties:
      idx1:
        example: "1"
        type: string
      idx2:
        example: "3"
        type: string
    type: object
  models.DisplayResponse:
    properties:
      code:
        example: "200"
        type: string
      data:
        items:
          $ref: '#/definitions/models.Company'
        type: array
      msg:
        example: success
        type: string
    type: object
  models.FailureResponse:
    properties:
      code:
        example: "401"
        type: string
      msg:
        example: token invalid
        type: string
    type: object
  models.InfoReq:
    properties:
      company_id:
        description: 公司ID
        example: "17280000089583"
        type: string
    type: object
  models.InfoResp:
    properties:
      polution_ids:
        description: 污染物ID
        example:
        - w00000
        - w00001
        - w00010
        items:
          type: string
        type: array
      port_ids:
        description: 排污口ID
        example:
        - "64000000000600100000"
        - "64000000000600100000"
        - "64000000000600100000"
        items:
          type: string
        type: array
    type: object
  models.JSONid:
    properties:
      id:
        example: "17280000089799"
        type: string
    type: object
  models.LoginRequest:
    properties:
      id:
        description: 账号
        example: "321321"
        type: string
      pwd:
        description: 密码
        example: "321"
        type: string
    type: object
  models.LoginResponse:
    properties:
      code:
        example: "200"
        type: string
      msg:
        example: success
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjE3MjgwMDAwMDg5OSIsImlhdCI6MTU4NjQwMjQ5NywiZXhwIjoxNTg2NDAyNzk3fQ.
        type: string
    type: object
  models.RankResponse:
    properties:
      code:
        example: "200"
        type: string
      data:
        items:
          $ref: '#/definitions/models.User'
        type: array
      msg:
        example: success
        type: string
    type: object
  models.RunModelOverviewData:
    properties:
      compare_date2_date1_count_of_diff_features:
        items:
          type: integer
        type: array
      compare_date2_date1_of_diff_features:
        items:
          type: number
        type: array
      compare_date2_date1_rate_of_diff_features:
        items:
          type: number
        type: array
      date1_warning_count_of_diff_features:
        items:
          type: integer
        type: array
      date2_warning_count_of_diff_features:
        items:
          type: integer
        type: array
    type: object
  models.RunModelRequest:
    properties:
      company_id:
        description: 公司ID
        example: "17280000089583"
        type: string
      date_e_1:
        description: 日/月/年,当前结束时间
        example: 1/2/2020
        type: string
      date_e_2:
        description: 日/月/年,对照数据结束时间
        example: 1/4/2020
        type: string
      date_s_1:
        description: 日/月/年,当前开始时间
        example: 1/1/2020
        type: string
      date_s_2:
        description: 日/月/年,对照数据开始时间
        example: 1/3/2020
        type: string
      port_id:
        description: 污染口ID
        example: "64000000000600100000"
        type: string
    type: object
  models.RunModelResp:
    properties:
      date1:
        $ref: '#/definitions/models.RunModelRespData'
      date2:
        $ref: '#/definitions/models.RunModelRespData'
      overview:
        $ref: '#/definitions/models.RunModelOverviewData'
    type: object
  models.RunModelRespData:
    properties:
      abnormal_date:
        example:
        - 04/01/2020
        - 05/01/2020
        - 06/01/2020
        - 07/01/2020
        items:
          type: string
        type: array
      date_list:
        example:
        - 01/01/2020
        - 02/01/2020
        - 03/01/2020
        - 04/01/2020
        - 05/01/2020
        - 06/01/2020
        - 07/01/2020
        items:
          type: string
        type: array
      rebuild_data:
        items:
          items:
            type: number
          type: array
        type: array
    type: object
  models.SuccessResponse:
    properties:
      code:
        example: "200"
        type: string
      msg:
        example: success
        type: string
    type: object
  models.User:
    properties:
      atten:
        description: 关注
        type: string
      id:
        description: 账号
        type: string
      level:
        description: 权限
        type: integer
      name:
        description: 昵称/姓名
        type: string
      pwd:
        description: 密码
        type: string
      reward:
        description: 积分
        type: integer
    type: object
  models.UserPostDto:
    properties:
      id:
        example: "17280000089799"
        type: string
      pic:
        example: 图片内容
        type: string
      post:
        example: 文字内容
        type: string
    type: object
info:
  contact: {}
paths:
  /addAtten:
    post:
      consumes:
      - application/json
      description: 添加到关注列表
      parameters:
      - description: 公司id
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.JSONid'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      security:
      - ApiKeyAuth: []
      summary: 添加到关注列表
  /attenInfo:
    get:
      consumes:
      - application/json
      description: 获得关注列表的公司id和状态
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CpnListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      security:
      - ApiKeyAuth: []
      summary: 获得关注列表的公司id和状态
  /company/appeal:
    post:
      consumes:
      - application/json
      description: 公司进行申诉
      parameters:
      - description: 公司申诉信息
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.CompanyAppealDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: 公司进行申诉
      tags:
      - company
  /company/history:
    get:
      consumes:
      - application/json
      description: 返回所有的企业申诉信息给政府视图
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AppealList'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      security:
      - ApiKeyAuth: []
      summary: 返回所有的企业申诉信息给政府视图
      tags:
      - company
  /delAtten:
    post:
      consumes:
      - application/json
      description: 删除关注
      parameters:
      - description: 公司id
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.JSONid'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      security:
      - ApiKeyAuth: []
      summary: 删除关注
  /display:
    post:
      consumes:
      - application/json
      description: 展示公司及其状态(传入两个索引)
      parameters:
      - description: 传入两个索引
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.DisplayRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DisplayResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      summary: 展示公司及其状态(传入两个索引)
  /displayBad:
    post:
      consumes:
      - application/json
      description: 展示可疑公司及其状态(传入两个索引)
      parameters:
      - description: 传入两个索引(降序黑榜)
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.DisplayRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DisplayResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      summary: 展示可疑公司及其状态(传入两个索引)
  /getFeatures:
    get:
      consumes:
      - application/json
      description: 拿到所有的特征名
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: features
      summary: 拿到所有的特征名
  /gvmt/changeAccusStatus:
    post:
      consumes:
      - application/json
      description: 修改待审核的排污实地图列表状态
      parameters:
      - description: status=1表示不通过,status=2表示等待,status=3表示通过
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.AccusStatusDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: 修改待审核的排污实地图列表状态
      tags:
      - gvmt(admin)
  /gvmt/changeAplStatus:
    post:
      consumes:
      - application/json
      description: 修改申诉列表状态
      parameters:
      - description: status=1表示不通过,status=2表示等待,status=3表示通过
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.AplStatusDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: 修改申诉列表状态
      tags:
      - gvmt(admin)
  /gvmt/changeStatus:
    post:
      consumes:
      - application/json
      description: 政府修改企业状态
      parameters:
      - description: '修改公司状态为status, 1为正常, 2为可疑违规(改: 1为减一次, 2为加一次, 3为归零)'
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.Company'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: 政府修改企业状态
      tags:
      - gvmt(admin)
  /gvmt/changeThreshold:
    post:
      consumes:
      - application/json
      description: 修改某个指标的阈值
      parameters:
      - description: 修改某个指标的阈值
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.ChangeThresholdReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: 修改某个指标的阈值
      tags:
      - gvmt(admin)
  /gvmt/getAccusationList:
    get:
      consumes:
      - application/json
      description: 返回所有游客投诉信息列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccusationList'
      security:
      - ApiKeyAuth: []
      summary: 返回所有游客投诉信息列表
      tags:
      - gvmt(admin)
  /gvmt/getAppealList:
    get:
      consumes:
      - application/json
      description: 返回所有的企业申诉信息给政府视图
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AppealList'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      security:
      - ApiKeyAuth: []
      summary: 返回所有的企业申诉信息给政府视图
      tags:
      - gvmt(admin)
  /info:
    post:
      consumes:
      - application/json
      description: 获得企业的port_id和polution_id
      parameters:
      - description: 企业id
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.InfoReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InfoResp'
      summary: 获得企业的port_id和polution_id
  /login:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: 登录信息
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      summary: 登录
  /rank:
    post:
      consumes:
      - application/json
      description: 展示用户排名
      parameters:
      - description: 传入两个索引
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.DisplayRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 返回用户排名
          schema:
            $ref: '#/definitions/models.RankResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      summary: 展示用户排名
  /run:
    post:
      consumes:
      - application/json
      description: 自主分析
      parameters:
      - description: 模型运行请求(现在是一些必选项, 后续可以传入自定义的阈值等要求)
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.RunModelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 运行结果
          schema:
            $ref: '#/definitions/models.RunModelResp'
      summary: 自主分析
  /visitor/history:
    get:
      consumes:
      - application/json
      description: 返回所有的企业申诉信息给政府视图
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccusationList'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      security:
      - ApiKeyAuth: []
      summary: 返回所有的企业申诉信息给政府视图
      tags:
      - visitor
  /visitor/upload:
    post:
      consumes:
      - application/json
      description: 进行举报
      parameters:
      - description: 举报信息
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.UserPostDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailureResponse'
      security:
      - ApiKeyAuth: []
      summary: 进行举报
      tags:
      - visitor
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
